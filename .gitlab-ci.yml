########################################################################################################################
# This file was generated using python_env, please do not edit directly.
########################################################################################################################

stages:
    - image
    - analysis
    - test

variables:
    TOX_PARALLEL_NO_SPINNER: 1
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
    paths:
        - .cache/pip

########################################################################################################################
# Docker
.image:
    stage: image
    before_script:
        - docker info
    script:
        # Login to GitLab container registry https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-the-gitlab-container-registry
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker build --pull --build-arg PYTHON_VERSION=$PYTHON_VERSION --tag "$IMAGE_TAG" --file docker/Dockerfile .
        - docker push "$IMAGE_TAG"
    variables:
        IMAGE_TAG: "$CI_REGISTRY_IMAGE/python:$PYTHON_VERSION"
    tags:
        - dind

image:py35:
    extends: .image
    variables:
        PYTHON_VERSION: "3.5"

image:py36:
    extends: .image
    variables:
        PYTHON_VERSION: "3.6"

image:py37:
    extends: .image
    variables:
        PYTHON_VERSION: "3.7"

image:py38:
    extends: .image
    variables:
        PYTHON_VERSION: "3.8"

########################################################################################################################
# Basic declarations
.py35: &py35
    image: "$CI_REGISTRY/$CI_PROJECT_PATH/python:3.5"

.py36: &py36
    image: "$CI_REGISTRY/$CI_PROJECT_PATH/python:3.6"

.py37: &py37
    image: "$CI_REGISTRY/$CI_PROJECT_PATH/python:3.7"

.py38: &py38
    image: "$CI_REGISTRY/$CI_PROJECT_PATH/python:3.8"

.install-dependencies: &install-dependencies
    before_script:
        # Set up SSH key for access to gitlab repositories
        - install -m 700 -d $HOME/.ssh
        - install -m 600 $SRC_DIR/{id_rsa,id_rsa.pub,known_hosts} $HOME/.ssh/
    variables:
        SRC_DIR: /usr/local/env

.test: &test
    <<: *install-dependencies
    script:
        # First, build all virtualenvs in parallel without actually executing any tests.
        - tox --parallel all --notest
        - tox

.test-thaw: &test-thaw
    <<: *test
    only:
        - schedules
    script:
        - tox -e py35-thaw,py36-thaw,py37-thaw,py38-thaw

########################################################################################################################
# Individual jobs
licensing:
    <<: *py38
    <<: *install-dependencies
    stage: analysis
    script:
        - git clone git@gitlab.office.nic.cz:internal-tools/license-check.git --single-branch --depth 1
        - ./license-check/license-check.sh -v

piprot:
    <<: *py38
    stage: analysis
    only:
        - schedules
    script:
        - pip install piprot
        - piprot requirements.txt constraints.txt
    allow_failure: true

test:py35:
    <<: *test
    <<: *py35

test:py36:
    <<: *test
    <<: *py36

test:py37:
    <<: *test
    <<: *py37

test:py38:
    <<: *test
    <<: *py38

test:py35-thaw:
    <<: *test-thaw
    <<: *py35

test:py36-thaw:
    <<: *test-thaw
    <<: *py36

test:py37-thaw:
    <<: *test-thaw
    <<: *py37

test:py38-thaw:
    <<: *test-thaw
    <<: *py38
